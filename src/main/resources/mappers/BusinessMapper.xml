<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.business.dao.BusinessMapper">
  <resultMap id="BaseResultMap" type="com.business.pojo.Business">
    <constructor>
      <idArg column="business_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="business_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="legal_persion" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="type" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    business_id, id, business_name, legal_persion, type, user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from business
    where business_id = #{businessId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from business
    where business_id = #{businessId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.business.pojo.Business">
    insert into business (business_id, id, business_name, 
      legal_persion, type, user_id
      )
    values (#{businessId,jdbcType=INTEGER}, #{id,jdbcType=INTEGER}, #{businessName,jdbcType=VARCHAR}, 
      #{legalPersion,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.business.pojo.Business">
    insert into business
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="businessId != null">
        business_id,
      </if>
      <if test="id != null">
        id,
      </if>
      <if test="businessName != null">
        business_name,
      </if>
      <if test="legalPersion != null">
        legal_persion,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="businessId != null">
        #{businessId,jdbcType=INTEGER},
      </if>
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="businessName != null">
        #{businessName,jdbcType=VARCHAR},
      </if>
      <if test="legalPersion != null">
        #{legalPersion,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.business.pojo.Business">
    update business
    <set>
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="businessName != null">
        business_name = #{businessName,jdbcType=VARCHAR},
      </if>
      <if test="legalPersion != null">
        legal_persion = #{legalPersion,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where business_id = #{businessId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.business.pojo.Business">
    update business
    set id = #{id,jdbcType=INTEGER},
      business_name = #{businessName,jdbcType=VARCHAR},
      legal_persion = #{legalPersion,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER}
    where business_id = #{businessId,jdbcType=INTEGER}
  </update>
<select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from business
  where user_id = #{userId,jdbcType=INTEGER}
</select>
</mapper>